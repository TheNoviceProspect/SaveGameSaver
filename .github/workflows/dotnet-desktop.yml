name: .NET Core Desktop

on:
  push:
    tags:
      - 'v*'
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
jobs:
  setup: # New job for setup and common steps
    runs-on: windows-latest
    outputs:
      solution_name: ${{ env.Solution_Name }}
      wap_project_path: ${{ env.Wap_Project_Path }}
      output_directory: ${{ env.Output_Directory }}
      app_version: ${{ steps.set_app_version.outputs.appVersion }}

    env:
      appVersion: 0.2
      Solution_Name: SaveGameSaver                         
      Wap_Project_Directory: SaveGameSaver    
      Wap_Project_Path: SaveGameSaver                   
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      Output_Directory: ${{ github.workspace }}/output/

    steps:
      - name: Set App Version Output
        id: set_app_version
        run: echo "::set-output name=appVersion::${{ env.appVersion }}"

      - name: Validate Cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ env.appVersion }}-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ env.appVersion }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2

  build:
    needs: setup
    strategy:
      matrix:
        configuration: [Release]
        targetplatform: [net8.0-windows]
        runtimeidentifier: [win-x64,win-arm64]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    steps:
      - name: Restore the application
        run: msbuild ${{ needs.setup.outputs.solution_name }} /t:Restore /p:Configuration=$env:Configuration /p:TargetPlatform=$env:Targetplatform /p:RuntimeIdentifiers=$env:Runtimeidentifier
        env:
          Configuration: ${{ matrix.configuration }}
          Targetplatform: ${{ matrix.targetplatform }}
          Runtimeidentifier: ${{ matrix.runtimeidentifier }}

      - name: Create the app package
        run: msbuild ${{ needs.setup.outputs.wap_project_path }} /p:Configuration=$env:Configuration /p:TargetPlatform=$env:Targetplatform /p:RuntimeIdentifiers=$env:Runtimeidentifier /p:PublishSingleFile=true /p:SelfContained=true /p:RestorePackages=false /p:OutDir=${{ needs.setup.outputs.output_directory }}
        env:
          Configuration: ${{ matrix.configuration }}
          Targetplatform: ${{ matrix.targetplatform }}
          Runtimeidentifier: ${{ matrix.runtimeidentifier }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Portable Executable
          path: ${{ needs.setup.outputs.output_directory }}\${{ needs.setup.outputs.solution_name }}.exe

  create-release:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Read release body from file
        id: read_release_notes
        run: |
          $RELEASE_BODY = Get-Content -Path release-notes.md -Raw
          echo "::set-output name=content::${RELEASE_BODY}"
      - name: Create release
        uses: actions/create-release@v1
        with:
          release_name: Release v${{ needs.set_app_version.outputs.appVersion }}.${{ github.run_number }}
          tag_name: ${{ github.ref }}
          body: ${{ steps.read_release_notes.outputs.content }} 